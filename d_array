#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int check_flag(char *flag, char t[], int w) {
  t = flag;
  for (int i = 0; i <= w; i++) {
    printf("%c", t[i]);
  }
  if (t[0] != 45) w = 0;
  printf("\n");

  return w;
}

void cut(char a[], int k[], int count) {
  int i = 0;

  for (i = k[count]; i < k[count +1 ]; i++) {
    printf("%c", a[i]);
  }
  i = i - k[count];
  printf("\n %d", i);
}

int main(int argc, char *argv[]) {
  int g = 0;
  g = g + strlen(argv[1]);
  int p = argc;
  char c;
  int n = 0;

  FILE *file = fopen(argv[3], "r");
  int s = 1;
  while ((c = fgetc(file)) != EOF) {
    s++;
    if (c == '\n') n++;
  }

  fclose(file);

  file = fopen(argv[3], "r");
  char ch;
  int i = 0;
  int y = 0;
  int *k = (int *)malloc(n * sizeof(int));
  char *a = (char *)malloc(s * sizeof(char));
  char *t = (char *)malloc(g * sizeof(char));

  int w = check_flag(argv[1], t, g);

  while ((ch = fgetc(file)) != EOF) {
    a[i] = ch;
    i++;
    if (ch == '\n') {
      k[y] = i;
      y++;
    }
  }

  for (int i = 0; i <= s; i++) {
    printf("%c", a[i]);
  }
  printf("\n\n\n");

  cut(a, k, p);

  printf("\n %d lenght = %d flag size =%d \n", p, s, w);
  free(a);
  free(k);
  free(t);

  return 0;
}
