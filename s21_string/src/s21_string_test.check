#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "s21_string.h"

#test strlen1
char strlen_test[14][30] = {"This", 
                            "This string",
                            "This string",
                            "\0This string for",
                            "\0This string for",  
                            "This striNg for tests.",
                            "This striNg for tests.",
                            "This striNg for tests.",
                            " ",
                            "   ", 
                            ".   ", 
                            "This string for tests.", 
                            "special symbol"};

                           
for(int i = 0; i <= 13; i++){
ck_assert_int_eq(strlen(strlen_test[i]), s21_strlen(strlen_test[i]));
}

#test s21memchr

char tests_strings[14][30] = {"This", 
                            "This string",
                            "This string",
                            "\0This string for",
                            "\0This string for",  
                            "This striNg for tests.",
                            "This striNg for tests.",
                            "This striNg for tests.",
                            " ",
                            "   ", 
                            ".   ", 
                            "This string for tests.", 
                            "special symbol"};

    s21_size_t butes[13] = {4, 2, 20, 20, 20,
                         5, 3, 21, 30, 3,
                          5, 7};
    char symbols[13] = {'T', 'i', '\0', 0, 78,
                    78, '.', 's', 'q', ' ',
                     '.', '\0', 10 };
    for(int i = 0; i < 13; i++){
        ck_assert_pstr_eq( memchr(tests_strings[i], symbols[i], butes[i]), s21_memchr(tests_strings[i], symbols[i], butes[i]));

  }


#test trim

ck_assert(s21_trim("", "") == 0);
ck_assert(s21_trim("", "er") == 0);
char *s1 = s21_trim("8d7h", "");
char *s2 = s21_trim("8d7h", "8");
char *s3 = s21_trim("8d7,.Fhghghvyry.8.", "8.");
char *s4 = s21_trim("007.jU;pegiyy  ", " 0.");
ck_assert_str_eq(s1, "8d7h");
ck_assert_str_eq(s2, "d7h");
ck_assert_str_eq(s3, "d7,.Fhghghvyry");
ck_assert_str_eq(s4, "7.jU;pegiyy");
free(s1);
free(s2);
free(s3);
free(s4);

#test insert

char *s1 = "School-21 test";
char *s2 = "insert ";
char *s3 = "amogus";
char *s4 = "is";
char *s5 = "shrek";
char *res1 = s21_insert(s1, " ", 3);
char *res2 = s21_insert(s5, s3, 5);
char *res3 = s21_insert(s3, s5, 0);
char *res4 = s21_insert(s5, s4, 5);
char *res5 = s21_insert(s2, s1, 4);
ck_assert_str_eq(res1, "Sch ool-21 test");
ck_assert_str_eq(res2, "shrekamogus");
ck_assert_str_eq(res3, "shrekamogus");
ck_assert_str_eq(res4, "shrekis");
ck_assert_str_eq(res5, "inseSchool-21 testrt ");
free(res1);
free(res2);
free(res3);
free(res4);
free(res5);

#test to_upper

char *s1 = "school-21";
char *s2 = "School is Cool";
char *s3 = "amogus";
char *s4 = "Shrek is amogus";
char *s5 = "what";
char *r1 = s21_to_upper(s1);
char *r2 = s21_to_upper(s2);
char *r3 = s21_to_upper(s3);
char *r4 = s21_to_upper(s4);
char *r5 = s21_to_upper(s5);
ck_assert_msg(!strcmp(r1, "SCHOOL-21"), "1st to_upper test failed");
ck_assert_msg(!strcmp(r2, "SCHOOL IS COOL"), "2nd to_upper test failed");
ck_assert_msg(!strcmp(r3, "AMOGUS"), "3rd to_upper test failed");
ck_assert_msg(!strcmp(r4, "SHREK IS AMOGUS"), "4rth to_upper test failed");
ck_assert_msg(!strcmp(r5, "WHAT"), "5th to_upper test failed");
free(r1);
free(r2);
free(r3);
free(r4);
free(r5);

#test to_lower

char s1[] = "SChOOl-21";
char s2[] = "ScHool is CoOl";
char s3[] = "amogus";
char s4[] = "ShrEK is Amogus";
char s5[] = "what";
char *r1 = s21_to_lower(s1);
char *r2 = s21_to_lower(s2);
char *r3 = s21_to_lower(s3);
char *r4 = s21_to_lower(s4);
char *r5 = s21_to_lower(s5);
ck_assert_msg(!strcmp(r1, "school-21"), "1st to_lower test failed");
ck_assert_msg(!strcmp(r2, "school is cool"), "2nd to_lower test failed");
ck_assert_msg(!strcmp(r3, "amogus"), "3rd to_lower test failed");
ck_assert_msg(!strcmp(r4, "shrek is amogus"), "4rth to_lower test failed");
ck_assert_msg(!strcmp(r5, "what"), "5th to_lower test failed");
free(r1);
free(r2);
free(r3);
free(r4);
free(r5);